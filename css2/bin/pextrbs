#!/usr/local/bin/perl
# Extract entries from the CSS properties database
# The database has the following format:
# name;; values;; initial-value;; applies-to;; 
# inherited;; percentages;; media;; computed value
# Special characters: 
#  1) Translate "*" into the words "all elements"
#  1.a) Translate "XX" into "not defined for shorthand properties"
#  2) "<name>" means the value is defined elsewhere. Translate to
#     <span class="value-inst-name">&lt;name&gt;</span>
#  3) "<'name'>" means the set of values is the same as for the
#      property with the same name. Translate to
#     <span class="propinst-name">&lt;'name'&gt;</span>     
#
# Ian Jacobs - ij@w3.org (Based on work by Arnaud Le Hors)
# $Id: pextr,v 1.31 2006-10-09 18:55:53 ihickson Exp $
#

$PROGNAME = substr($0, rindex($0, "/") + 1);

if (!$ARGV[0]) {
    print "Usage: $PROGNAME file [tgt_dir]\n";
    exit 1;
}

# copy file in memory
if (!open(input, $ARGV[0])) {
    print "$PROGNAME Error: Cannot open file: $ARGV[0]\n";
    exit 1;
}
$buf = "";
while (<input>) {
    $buf .= $_;
}
close(input);

$path = "";
if ($ARGV[1]) {
    $path = "$ARGV[1]/";
}

# regexps
$sp = "[ \t\n]*";		# whitespace
$patt = "$sp(.*?)$sp";
$blockst = "[/][*]";
$blocket = "[*][/]";

sub format_property {
my $name = $_[0]; 
my $values = $_[1]; 
my $init = $_[2];
my $applies = $_[3];
my $inherited = $_[4];
my $percentages = $_[5];
my $media = $_[6];
my $compval = $_[7];
$name = join(", ", split(/[, \t\n]+/, $name));
$values =~ s/([<>])/\1\1/g;
$values =~ s/\s+/ /g;
print output "<xmp class=propdef>\n";
print output "Name: $name\n";
print output "Value: $values\n";
print output "Initial: $init\n";
print output "Applies to: $applies\n";
print output "Inherited: $inherited\n";
print output "Percentages: $percentages\n";
print output "Media: $media\n";
print output "Computed Value: $compval\n";
print output "</xmp>\n\n";
}

# extract every possible block
$_ = $buf;
while (/$blockst(?:.*?)$blocket/s) {
  $placeholder = $';
  my $h = $&;
  if ($h =~ /$blockst$patt;;$patt;;$patt;;$patt;;$patt;;$patt;;$patt;;$patt$blocket/s) {
    # Set parameters first (before any modifications)
    my $props = $1;
    my $values = $2;
    my $init = $3;
    my $applies = $4;
    my $inherited = $5;
    my $percentage = $6;
    my $media = $7;
    my $compval = $8;
    my @names = split(/[, \t\n]+/, $props);
    my $name = $names[0];
    $output = "$path$name.srb";
    print "\textracting $output\n";
    open(output, "> $output");
    &format_property($props, $values, $init, $applies, $inherited,
		     $percentage, $media, $compval);
    close(output);
  } else {
    warn "Incorrect syntax for property definition: $h\n";
  }
  $_ = $placeholder;
}
