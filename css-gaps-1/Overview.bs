<pre class='metadata'>
Title: CSS Gap Decorations Module Level 1
Shortname: css-gap-decoration
Level: 1
Status: UD
Group: csswg
Work Status: exploring
Repository: MicrosoftEdge/MSEdgeExplainers
URL: https://kbabbitt.github.io/css-gap-decorations/
Editor: Kevin Babbitt, Microsoft, https://github.com/kbabbitt, w3cid 124689
Abstract: This module introduces several properties to add row and column gap decorations to container layout types such as grid and flex.
</pre>
<pre class='anchors'>
urlPrefix: https://tabatkins.github.io/specs/css-masonry/; type: dfn; spec: CSS-MASONRY; text: masonry containers
</pre>

Introduction {#intro}
=====================

	<em>This section is not normative.</em>

	[[CSS-MULTICOL-1#column-gaps-and-rules]] allows for rules to be drawn
	between columns in a <a>multicol container</a>. This specification expands
	upon the 'column-rule-width', 'column-rule-style', and 'column-rule-color'
	properties, adding equivalents in the row direction, expanding their
	application to other container layouts, and giving advanced control over
	where and how gap decorations are painted.
	
Value Definitions {#values}
---------------------------

	This specification follows the <a href="https://www.w3.org/TR/CSS2/about.html#property-defs">CSS property definition conventions</a> from [[!CSS2]]
	using the <a href="https://www.w3.org/TR/css-values-3/#value-defs">value definition syntax</a> from [[!CSS-VALUES-3]].
	Value types not defined in this specification are defined in CSS Values &amp; Units [[!CSS-VALUES-3]].
	Combination with other CSS modules may expand the definitions of these value types.

	In addition to the property-specific values listed in their definitions,
	all properties defined in this specification
	also accept the <a>CSS-wide keywords</a> as their property value.
	For readability they have not been repeated explicitly.

Defining gap decoration areas {#gap-decoration-areas}
=====================================================

Grid gap decoration areas: The 'grid-column-rule-area' and 'grid-row-rule-area' properties {#grid-column-row-rule-area}
-----------------------------------------------------------------------------------------------------------------------

	<pre class='propdef'>
		Name: grid-column-rule-area, grid-row-rule-area
		Value: [ <<grid-line>> [ / <<grid-line>> ]{0,3} ]#
		Initial: 1 / 1 / -1 / -1
		Applies to: <a>grid containers</a>
		Inherited: no
		Percentages: n/a
		Computed value: specified value
		Animation type: not animatable
		Canonical order: per grammar
	</pre>

	A list of grid line tuples, as in the 'grid-area' property, that define
	portions of the grid over which gap decorations are painted.

Color, style, and width {#color-style-width}
============================================

Gap decoration color: The 'column-rule-color' and 'row-rule-color' properties {#column-row-rule-color}
------------------------------------------------------------------------------------------------------

	<pre class='propdef'>
		Name: column-rule-color, row-rule-color
		Value: [ <<line-color-list>> | <<auto-line-color-list>> ]#
		Initial: curerentcolor
		Applies to: <a>grid containers</a>, <a>flex containers</a>, <a>multicol containers</a>, and <a>masonry containers</a>
		Inherited: no
		Animation type: by computed value type
	</pre>

	<pre class='prod'>
		<dfn>&lt;line-color-list&gt;</dfn>          = [ <<line-color-or-repeat>> ]+

		<dfn>&lt;auto-line-color-list&gt;</dfn>     = [ <<line-color-or-repeat>> ]*
									               <<auto-repeat-line-color>>
									               [ <<line-color-or-repeat>> ]*

		<dfn>&lt;line-color-or-repeat&gt;</dfn>     = [ <<color>> | <<repeat-line-color>> ]

		<dfn>&lt;repeat-line-color&gt;</dfn>        = repeat( [ <<integer [1,∞]>> ] , [ <<color>> ]+ )

		<dfn>&lt;auto-repeat-line-color&gt;</dfn>   = repeat( auto , [ <<color>> ]+ )
	</pre>

Gap decoration style: The 'column-rule-style' and 'row-rule-style' properties {#column-row-rule-style}
------------------------------------------------------------------------------------------------------

	<pre class='propdef'>
		Name: column-rule-style, row-rule-style
		Value: [ <<line-style-list>> | <<auto-line-style-list>> ]#
		Initial: none
		Applies to: <a>grid containers</a>, <a>flex containers</a>, <a>multicol containers</a>, and <a>masonry containers</a>
		Inherited: no
		Animation type: discrete
	</pre>

	<pre class='prod'>
		<dfn>&lt;line-style-list&gt;</dfn>          = [ <<line-style-or-repeat>> ]+

		<dfn>&lt;auto-line-style-list&gt;</dfn>     = [ <<line-style-or-repeat>> ]*
									               <<auto-repeat-line-style>>
									               [ <<line-style-or-repeat>> ]*

		<dfn>&lt;line-style-or-repeat&gt;</dfn>     = [ <<line-style>> | <<repeat-line-style>> ]

		<dfn>&lt;repeat-line-style&gt;</dfn>        = repeat( [ <<integer [1,∞]>> ] , [ <<line-style>> ]+ )

		<dfn>&lt;auto-repeat-line-style&gt;</dfn>   = repeat( auto , [ <<line-style>> ]+ )
	</pre>

Gap decoration width: The 'column-rule-width' and 'row-rule-width' properties {#column-row-rule-width}
------------------------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: column-rule-width, row-rule-width
		Value: [ <<line-width-list>> | <<auto-line-width-list>> ]#
		Initial: medium
		Applies to: <a>grid containers</a>, <a>flex containers</a>, <a>multicol containers</a>, and <a>masonry containers</a>
		Inherited: no
		Computed value: absolute length, [=snapped as a border width=]; ''0'' if the rule style is ''border-style/none'' or ''css-backgrounds-3/hidden''
		Animation type: by computed value type
	</pre>

	<pre class='prod'>
		<dfn>&lt;line-width-list&gt;</dfn>          = [ <<line-width-or-repeat>> ]+

		<dfn>&lt;auto-line-width-list&gt;</dfn>     = [ <<line-width-or-repeat>> ]*
									               <<auto-repeat-line-width>>
									               [ <<line-width-or-repeat>> ]*

		<dfn>&lt;line-width-or-repeat&gt;</dfn>     = [ <<line-width>> | <<repeat-line-width>> ]

		<dfn>&lt;repeat-line-width&gt;</dfn>        = repeat( [ <<integer [1,∞]>> ] , [ <<line-width>> ]+ )

		<dfn>&lt;auto-repeat-line-width&gt;</dfn>   = repeat( auto , [ <<line-width>> ]+ )
	</pre>

Gap decoration shorthands: The 'column-rule' and 'row-rule' properties {#gap-decoration-shorthands}
---------------------------------------------------------------------------------------------------

	<pre class='propdef shorthand'>
		Name: column-rule, row-rule
		Value: [ <<gap-rule-list>> | <<auto-gap-rule-list>> ]#
	</pre>

	<pre class='prod'>
		<dfn>&lt;gap-rule-list&gt;</dfn>        = <<gap-rule-or-repeat>> [ / <<gap-rule-or-repeat>> ]*

		<dfn>&lt;auto-gap-rule-list&gt;</dfn>   = [ [ <<gap-rule-or-repeat>> ] / ]*
								             <<auto-repeat-gap-rule>>
								             [ / [ <<gap-rule-or-repeat>> ] ]*

		<dfn>&lt;gap-rule-or-repeat&gt;</dfn>   = [ <<gap-rule>> | <<repeat-gap-rule>> ]

		<dfn>&lt;repeat-gap-rule&gt;</dfn>      = repeat( [ <<integer [1,∞]>> ] , [ <<gap-rule>> ]# )

		<dfn>&lt;auto-repeat-gap-rule&gt;</dfn> = repeat( auto , [ <<gap-rule>> ]# )

		<dfn>&lt;gap-rule&gt;</dfn>             = [ <<line-width>> || <<line-style>> || <<color>> ]
	</pre>

Bi-directional gap decoration shorthands: The 'gap-rule-color', 'gap-rule-style', and 'gap-rule-width' properties {#gap-rule-color-style-width}
-----------------------------------------------------------------------------------------------------------------------------------------------

	<pre class='propdef shorthand'>
		Name: gap-rule-color
		Value: <<'column-rule-color'>>
		Inherited: no
		Applies to: Same as 'column-rule-color' and 'row-rule-color'
	</pre>

	<pre class='propdef shorthand'>
		Name: gap-rule-style
		Value: <<'column-rule-style'>>
		Inherited: no
		Applies to: Same as 'column-rule-style' and 'row-rule-style'
	</pre>

	<pre class='propdef shorthand'>
		Name: gap-rule-width
		Value: <<'column-rule-width'>>
		Inherited: no
		Applies to: Same as 'column-rule-width' and 'row-rule-width'
	</pre>

Gap decoration segment painting {#segment-painting}
===================================================

	By default, gap decorations are painted as continuous segments that extend
	as far as possible along the centerline of a given gap. The decoration is
	painted from one gap T intersection to another, with both endpoints at the
	centers of the T crossings and the decoration proceeding along the stems of
	both Ts. In grid layout, row decorations are painted on top of column
	decorations by default; this behavior may be changed using the
	'gap-rule-paint-order' property.

Gap decoration segment length: The 'column-rule-outset' and 'row-rule-outset' properties {#column-row-rule-outset}
------------------------------------------------------------------------------------------------------------------

	Authors may specify that decorations are instead segmented between all gap
	intersections. In such cases, each segment starts at the edge of a given gap
	intersection and proceeds to the edge of the next gap intersection. The
	endpoints may be offset from those endpoints using the 'column-rule-outset'
	and 'row-rule-outset' properties.

	<pre class='propdef'>
		Name: column-rule-outset, row-rule-outset
		Value: [ <<length-percentage>> | ''join'' ]#
		Initial: ''join''
		Applies to: <a>grid containers</a>, <a>flex containers</a>, <a>multicol containers</a>, and <a>masonry containers</a>
		Inherited: no
		Percentages: refer to the gap width in the perpendicular direction
		Animation type: by computed value type
	</pre>

	<dl dfn-type="value" dfn-for="column-rule-outset, row-rule-outset">
		<dt><dfn>join</dfn>
		<dd>
			"Joins together" segments to give the "T intersections" behavior
			described above. To facilitate animation effects, ''join'' computes
			to ''50%''.
		</dd>
		<dt><dfn><<length-percentage>></dfn>
		<dd>
			Each segment starts at the edge of a given gap intersection and
			proceeds to the edge of the next gap intersection, modified by the
			value given. Positive values extend into the neighboring
			intersection; negative values recede from it. These offsets also
			apply at the edges of the container, where negative values may
			extend into the padding area.
		</dd>
	</dl>

Interaction with spanning items in Grid: The 'grid-column-rule-break', 'grid-row-rule-break', and 'grid-rule-break' properties {#grid-rule-break}
-------------------------------------------------------------------------------------------------------------------------------------------------

	<pre class='propdef'>
		Name: grid-column-rule-break, grid-row-rule-break
		Value: [ span | none ]#
		Initial: span
		Applies to: <a>grid containers</a>
		Inherited: no
		Animation type: discrete
	</pre>

	<dl dfn-type="value" dfn-for="grid-column-rule-break, grid-row-rule-break">
		<dt><dfn>span</dfn>
		<dd>
			Gives either the "T intersections" or "all intersections" behavior
			described previously, depending on the value of the
			'column-rule-outset' or 'row-rule-outset' property.
		</dd>
		<dt><dfn>none</dfn>
		<dd>
			Causes gap decorations to cross behind spanning items and receive
			the "T intersection" behavior described previously at the edges of
			the gap decoration area.
		</dd>
	</dl>

	<pre class='propdef shorthand'>
		Name: grid-rule-break
		Value: [ span | none ]#
		Applies to: Same as 'grid-column-rule-break' and 'grid-row-rule-break'
	</pre>

Gap decoration paint order: The 'gap-rule-paint-order' property {#gap-rule-paint-order}
---------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: gap-rule-paint-order
		Value: [ row-over-column | column-over-row | main-over-cross | cross-over-main ]#
		Initial: main-over-cross
		Applies to: <a>grid containers</a>, <a>flex containers</a>, <a>multicol containers</a>, and <a>masonry containers</a>
		Inherited: no
		Animation type: discrete
	</pre>

Direction-relative properties {#direction-relative}
===================================================

	These are designed to enable scenarios where authors wish to switch
	'flex-direction' based on space constraints or other factors.

Direction-relative decoration colors: The 'main-rule-color' and 'cross-rule-color' properties {#main-cross-rule-color}
----------------------------------------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: main-rule-color, cross-rule-color
		Value: <<'column-rule-color'>>
		Initial: curerentcolor
		Applies to: Same as 'column-rule-color' and 'row-rule-color'
		Inherited: no
		Animation type: by computed value type
	</pre>

Direction-relative decoration styles: The 'main-rule-style' and 'cross-rule-style' properties {#main-cross-rule-style}
----------------------------------------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: main-rule-style, cross-rule-style
		Value: <<'column-rule-style'>>
		Initial: none
		Applies to: Same as 'column-rule-style' and 'row-rule-style'
		Inherited: no
		Animation type: discrete
	</pre>

Direction-relative decoration width: The 'main-rule-width' and 'cross-rule-width' properties {#main-cross-rule-width}
----------------------------------------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: main-rule-width, cross-rule-width
		Value: <<'column-rule-width'>>
		Initial: medium
		Applies to: Same as 'column-rule-width' and 'row-rule-width'
		Inherited: no
		Animation type: by computed value type
	</pre>

Direction-relative decoration shorthands: The 'main-rule' and 'cross-rule' properties {#main-cross-rule}
--------------------------------------------------------------------------------------------------------
	<pre class='propdef shorthand'>
		Name: main-rule, cross-rule
		Value: <<'column-rule'>>
		Applies to: Same as 'column-rule' and 'row-rule'
	</pre>

Direction-relative segment lengths: The 'main-rule-outset' and 'cross-rule-outset' properties {#main-cross-rule-outset}
-----------------------------------------------------------------------------------------------------------------------
	<pre class='propdef'>
		Name: main-rule-outset, cross-rule-outset
		Value: <<'column-rule-outset'>>
		Initial: join
		Applies to: Same as 'column-rule-outset' and 'row-rule-outset'
		Inherited: no
		Animation type: by computed value type
	</pre>

<h2 class=no-num id=privacy>Privacy Considerations</h2>

No new privacy considerations have been reported on this specification.

<h2 class=no-num id=security>Security Considerations</h2>

No new security considerations have been reported on this specification.
