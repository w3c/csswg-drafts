<pre class='metadata'>
Title: CSS Fonts Module Level 4
Shortname: css-fonts
Level: 4
Status: ED
Work Status: Exploring
Group: CSSWG
ED: https://drafts.csswg.org/css-fonts-4/
Editor: John Daggett, Invited Expert, https://twitter.com/nattokirai
Editor: Myles C. Maxfield, Apple Inc., mmaxfield@apple.com
Abstract: This specification defines modifications to the existing <a href="https://drafts.csswg.org/css-fonts-3/">CSS Fonts 3</a> specification along with additional experimental features.
Ignored Terms: font-palette, <named-palette-color>
</pre>

<script type="text/javascript" src="http://use.typekit.com/xon2bky.js"></script>
<script type="text/javascript">try{Typekit.load();}catch(e){}</script>

<style>

body, th, td, h1, h2, h3, h4, h5, h6 {
  font-family: "myriad-pro", sans-serif !important;
}

a.self-link {
  opacity: 0.1;
}

.touch a.self-link {
  opacity: 0.5;
}

a.self-link:hover {
  color: black;
  opacity: 1;
  background-color: transparent;
}

.advisement {
  margin-top: 4em;
  text-align: left;
}

body > p, body > ul, body > p + dl, #example-f839f6c8,
h3#conventions, h3#conformance-classes, h3#partial,
h3#experimental, h3#testing { font-size: 3.1415926535897932384626433832795028841971693993751% }

@media print {
  body > p, body > ul, body > p + dl, #example-f839f6c8,
  h3#conventions, h3#conformance-classes, h3#partial,
  h3#experimental, h3#testing { font-size: inherit }
}

ul.indexlist { font-size: inherit; }


</style>
<pre class="link-defaults">
spec:css-color-4; type:property; text:color
</pre>

<p class="advisement"><strong>This document contains ideas and
experiments that may or may not end up in the final version of a CSS
Fonts specification. Implementors are encouraged to ask about the status
of a particular feature listed here on the <code>www-style</code>
mailing list.</strong></p>

<h2 id="introduction">Introduction</h2>

<p>The CSS3 Fonts specification ([[!CSS-FONTS-3]]) describes the basic
controls CSS provides for selecting and using fonts within documents.
The ideas here are additions or modifications to the properties and
rules defined in CSS3 Fonts.</p>

<p></p>

<h2 id="font-palette-control">Controlling font palette colors</h2>

<div>
	Resolved at 2015 Sydney to add font-palette control.
	<a href="https://lists.w3.org/Archives/Public/www-style/2015Feb/0211.html">Original proposal</a>.

	Details: multicolor fonts now exist.
	They expose several "palette indexes" that can be given different colors.
	They might also expose predefined palettes.
	We want to be able to tell the browser to use a predefined palette,
	or to provide our own colors for a palette.

	Final proposal is:

	1. Add a 'font-palette' property.  For now the grammar is just:

		<pre class=prod><<integer>> | light | dark | <<named-palette-color>>#</pre>

		with <<integer>> selecting the nth palette in the font,
		and ''light'' and ''dark'' selecting the first palette designated "light" or "dark"
		(this is metadata that's already part of the format).
		If there's any font fallback, the fallback fonts don't use a palette.
	2. Add ''@palette-entries'' to ''@font-feature-values'',
		with the name of each declaration defining a name for a particular palette color,
		and the value being an integer for the index of that palette color.
		<<named-palette-color>> is <code><<ident>> <<color>></code>.
		Any palette colors not given an explicit value default to value of 'color'
		(so by default it just renders solidly with 'color' value, as normal).
		If a palette color name occurs more than once, the last one wins
		(so you can declare a palette in a variable, and override bits as desired).
</div>

<h2 id="expanded-font-weight-scale">Expanding the scale of <code>font-weight</code></h2>

<p>Expand the range of weights possible within the <code>font-weight</code>
property and <code>font-weight</code> descriptor to include integer values within
the range [1..999]. Define precisely how the font matching algorithm works
when using weights in this range.</p>

<p class="example">Example of using new font weights mixed with old ones</p>

<h2 id="min-max-font-size">Minimum and maximum <code>font-size</code></h2>

<p>Define new properties to control the minimum and maximum font-size,
<code>min-font-size</code> and <code>max-font-size</code>.</p>

<h2 id="extended-generics">New generic font families</h2>

<p>For most languages and scripts, existing generics can be mapped to
something comparable to that script. That's useful for the web so that
generics like <code>serif</code> and <code>sans-serif</code> map to
something reasonable independent of the language of the content. But
typographic traditions vary widely across the world and many scripts
have a variety of common typeface designs that don't map cleanly
into these existing generics. In situations where a similar typeface is
used across a wide variety of platforms, it's useful to extend the set
of predefined CSS generic font families to cover these type styles.</p>

<p>Add new generic font families for:</p>
<ul dfn-for=font-family dfn-type=value>
<li><dfn>system-ui</dfn> font family representing the default UI font on a given platform</li>
<li><dfn>emoji</dfn> font family for emoji characters</li>
<li><dfn>math</dfn> font family used for rendering mathematical expressions</li>
<li><dfn>fangsong</dfn> font family used for <em>fang song</em> typefaces in Chinese</li>
</ul>

Issue: Add ''system-ui'' fingerprinting issue to Security and Privacy Considerations section
per <a href="https://lists.w3.org/Archives/Public/www-style/2015Aug/0051.html">discussion</a>.

<h2 id="font-synthesis-small-caps">New <code>small-caps</code> value for <code>font-synthesis</code></h2>

<p>Since small capitals are often synthesized for fonts lacking smalls-caps glyphs,
add a <code>small-caps</code> value to the <code>font-synthesis</code> property
to allow small-caps synthesis to be disabled.
(<a href="https://lists.w3.org/Archives/Public/www-style/2015Jul/0463.html">www-style discussion</a>)</p>

<h2 id="emoji-fallback">Font fallback for emoji codepoints</h2>

<p>Many codepoints supported by emoji fonts overlap with codepoints supported
by existing fonts. In fallback situations where it's not clear whether to use
an emoji font or not, UTR51 defines a the default behavior for a given codepoint.</p>

<p class="note">Authors can explicitly control emoji or text display using selectors.</p>

<p class="example">Example of author control over emoji/text styles</p>

<h2 class="no-num" id="acknowledgments">Acknowledgments</h2>

<script>
if ('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) {
  var el = document.getElementsByTagName("html")[0];
  el.className += " touch";
}
</script>
