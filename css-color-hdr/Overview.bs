<pre class='metadata'>
Title: CSS Color HDR Module Level 1
Shortname: css-color-hdr
Level: 1
Status: UD
Group: csswg
TR: https://www.w3.org/TR/css-color-hdr/
ED: https://drafts.csswg.org/css-color-hdr/
Work Status: exploring
Editor: Chris Lilley, W3C, chris@w3.org, w3cid 1438
Abstract: This module explores additions to CSS Color 4 to enable High Dynamic Range (HDR).
</pre>

<pre class=biblio>
	{
		"ARIB_STD-B67": {
			"href": "https://www.arib.or.jp/english/html/overview/doc/2-STD-B67v1_0.pdf",
			"title": "Essential Parameter Values for the Extended Image Dynamic Range Television (EIDRTV) System for Programme Production",
			"publisher": "ARIB",
			"date": "3 July 2015",
			"rawDate": "2015-07-03"
		},
		"Rec_BT.2100": {
			"title": "ITU-R BT.2100-2 Image parameter values for high dynamic range television for use in production and international programme exchange",
			"publisher": "ITU",
			"href": "https://www.itu.int/dms_pubrec/itu-r/rec/bt/R-REC-BT.2100-2-201807-I!!PDF-E.pdf",
			"rawDate": "2018-07-00",
			"date": "July 2018"
		},
		"Rec_BT.2390": {
			"href": "https://www.itu.int/dms_pub/itu-r/opb/rep/R-REP-BT.2390-8-2020-PDF-E.pdf",
			"title": "ITU-R BT.2390-8 High dynamic range television for production and international programme exchange",
			"publisher": "ITU",
			"date": "February 2020",
			"rawDate": "2020-02-00"
		},
		"Rpt_BT.2408": {
			"href": "https://www.itu.int/dms_pub/itu-r/opb/rep/R-REP-BT.2408-2017-PDF-E.pdf",
			"title": "Report ITU-R BT.2408-0 Operational practices in HDR television production",
			"publisher": "ITU",
			"date": "October 2017"
		},
		"Safdar-PUCS": {
			"authors": [
				"Safdar, Muhammad",
				"Ciu, Guihua",
				"Kim, Youn Jin",
				"Luo, Ming Ronnier"
				],
			"href": "https://www.osapublishing.org/DirectPDFAccess/33630C0F-CFF9-6328-FA6195B4E962F4D7_368272/oe-25-13-15131.pdf?da=1&id=368272&amp;seq=0&amp;mobile=no",
			"title": "Perceptually uniform color space for image signals including high dynamic range and wide gamut",
			"publisher": "Optics Express, vol 24 no 13 pp. 15131-15151",
			"date": "26 June 2017",
			"rawDate": "2017-06-26"
		},
		"SMPTE-ST-2084": {
			"href": "https://ieeexplore.ieee.org/document/7291452",
			"title": "ST 2084:2014 - SMPTE Standard - High Dynamic Range Electro-Optical Transfer Function of Mastering Reference Displays",
			"publisher": "SMPTE",
			"date": "29 August 2014",
			"rawDate": "2014-08-29",
			"abstract": "This standard specifies an EOTF characterizing high-dynamic-range reference displays used primarily for mastering non-broadcast content. This standard also specifies an Inverse-EOTF derived from the EOTF.",
			"isbn": "978-1-61482-829-7"
		}
	}
</pre>
<link rel="stylesheet" href="style.css" />

Introduction {#intro}
=====================

	<em>This section is not normative.</em>

	CSS Color 4 adds Wide Color Gamut (WCG) colorspaces to the Open Web Platform.
	By design, these are all Standard Dynamic Range (SDR) colorspaces.
	This specification explores what additions might be suitable
	to also add High Dynamic Range (HDR).

	While WCG specifications have been broadly stable for some decades,
	HDR standards are less mature
	and have undergone frequent revision in the last decade.

	This specification is a collection of ideas and has no status whatsoever.
	It is not even an Editors Draft and has not been reviewed or adopted by
	the CSS Working Group.

Value Definitions {#values}
---------------------------

	This specification follows the <a href="https://www.w3.org/TR/CSS2/about.html#property-defs">CSS property definition conventions</a> from [[!CSS2]]
	using the <a href="https://www.w3.org/TR/css-values-3/#value-defs">value definition syntax</a> from [[!CSS-VALUES-3]].
	Value types not defined in this specification are defined in CSS Values &amp; Units [[!CSS-VALUES-3]].
	Combination with other CSS modules may expand the definitions of these value types.

	In addition to the property-specific values listed in their definitions,
	all properties defined in this specification
	also accept the <a>CSS-wide keywords</a> as their property value.
	For readability they have not been repeated explicitly.

Predefined colorspaces for HDR: {#predefined-HDR}
=====================

	In addition to the <a href="https://drafts.csswg.org/css-color-4/#predefined">SDR
	colorspaces</a> defined by CSS Color 4, the following HDR colorspaces are defined
	for use in the color function [[css-color-4#color-function]].

	Serialization of values in these new colorspaces is identical to the description in [[css-color-4#serializing-color-values]].

<dfn export>rec2100-pq</dfn> {#valdef-color-rec2100-pq}
---------------------------

	The ''rec2100-pq'' [[!Rec_BT.2100]] colorspace accepts three numeric parameters,
	representing the red, green, and blue channels of the color,
	with each having a valid range of [0, 1]
	regardless of the actual bit depth (10 or 12 bits per component).

	Issue: This is to avoid confusion if [0, 1024] and [0, 4096]
	encoded values are mixed up.
	Add examples showing conversion from binary values to the [0, 1] range.

	Issue: should this specification recommend that the CSS Object Model
	store these values in the 16-bit half-floating point representation
	(IEEE standard 754-2008.)
	from BT.2100 pp. 9-10? (or any wider representation, like float or double)?

	Issue: should the values accept % as well as number? so 19% as well as 0.19.
	Probably yes.

	The Perceptual Quantizer (PQ) electro-optical transfer function is used
	[[SMPTE-ST-2084]],[[!Rec_BT.2100]].
	PQ assumes a reference viewing condition
	where the screen surround
	is at 5 cd/m².

	ITU Reference 2100 is used for HDR 4k and 8k television.

	In contrast to SDR colorspaces and some HDR colorspaces,
	the PQ values are <em>absolute</em> rather than relative.

	Issue: add a diagram showing SDR and HDR dynamic ranges on a log scale

	It has the following characteristics:
	(The display primaries are the same as [[!Rec.2020]]):

	<table>
		<thead><td></td><td>x</td><td>y</td></thead>
		<tr><th>Red chromaticity</th><td>0.708</td><td>0.292</td></tr>
		<tr><th>Green chromaticity</th><td>0.170</td><td>0.797</td></tr>
		<tr><th>Blue chromaticity</th><td>0.131</td><td>0.046</td></tr>
		<tr><th>White chromaticity</th><td>0.3127</td><td>0.3290</td></tr>
		<tr><th>Transfer function</th><td colspan="2">Perceptual Quantizer</td></tr>
		<tr><th>White luminance</th><td colspan="2">203 cd/m²</td></tr>
		<tr><th>Peak white luminance</th><td colspan="2">10,000 cd/m²</td></tr>
		<tr><th>Black luminance</th><td colspan="2">0.001 cd/m²</td></tr>
		<tr><th>Image state</th><td colspan="2">display-referred</td></tr>
	</table>

	Issue: from BT.2100 p.3 "Note 3d – For PQ in a non-reference viewing environment, or for HLG (in any viewing environment), the black level should be adjusted using the PLUGE test signal and procedure specified in Recommendation ITU-R BT.814."

	<div class="example">
		This color represents a blinding white
		with a luminance of 10,000 cd/m².
		Such a bright color can only be displayed briefly,
		on a small area of the screen.
		Content is typically mastered with a lower peak white,
		such as 4,000  cd/m².
		<pre>
		<span class="swatch oog" style="--color: white"></span> color(rec2100-pq 1.0 1.0 1.0);
		</pre>
	</div>


	<div class="example">
		This color represents a comfortable "diffuse white"
		This color can be displayed for long periods,
		or used for subtitles,
		on any sized area of the screen.
		Diffuse white is 203 cd/m².
		<pre>
		<span class="swatch" style="--color: white"></span> color(rec2100-pq 0.58 0.58 0.58);
		</pre>
		This color represents a mid grey,
		like a photographer's "18% reflectance grey" card,
		at 17 cd/m².
		<pre>
		<span class="swatch" style="--color: rgb(46.632% 46.632% 46.632%)"></span> color(rec2100-pq 0.34 0.34 0.34);
		</pre>
	</div>

	Issue: add other examples, including encoding of sRGB red, green, blue and P3 red, green, blue.

	Linear-light RGB signals are converted to PQ encoded as follows. An absolute luminance scale is used, so the luminance of diffuse (media) white is required to scale relative luminances. The maximum encodable value (peak, small-area white) in PQ is 10,000 cd/m². Media white is 203 cd/m² [[!Rpt_BT.2408]].

	<!-- From Froehlich p.42
		and BT.2100 Table 4 p.4 Reference PQ OETF
	-->

	<pre class="lang-javascript">
		var Er;			// the red, green or blue component, [0, 1] for SDR, [0, 70ish] for HDR
		var Yw = 203;	// the absolute luminance of diffuse white, cd/m²
		var x = Er * Yw / 10000; 	// absolute luminance of peak white is 10,000 cd/m².
		const n = 2610 / (2 ** 14);
		const m = 2523 / (2 ** 5);
		const c1 = 3424 / (2 ** 12);
		const c2 = 2413 / (2 ** 7);
		const c3 = 2392 / (2 ** 7);
		xPQ = (((c1 + (c2 * (x ** n))) / (1 + (c3 * (x ** n)))) ** m);

	</pre>
		xPQ is the "gamma-corrected" (OETF-adjusted) signal [0, 1].

	PQ encoded values are converted to linear-light as follows:

	<!-- from BT.2100 Table 4 p.4 Reference EOTF -->

	<pre class="lang-javascript">
		var xPQ;			// the red, green or blue PQ-encoded component, [0, 1]
		const ninv = (2 ** 14) / 2610;
		const minv = (2 ** 5) / 2523;
		const c1 = 3424 / (2 ** 12);
		const c2 = 2413 / (2 ** 7);
		const c3 = 2392 / (2 ** 7);
		var x = (((Math.max(((xPQ ** minv) - c1), 0) / (c2 - (c3 * (xPQ ** minv)))) ** ninv);
		var Yw = 203;			// the absolute luminance of diffuse white, cd/m²
		var Ea = x * 10000; 	// absolute luminance, [0, 10,000].
		var Er = x * 10000 / Yw; 	// luminance relative to diffuse white, [0, 70 or so].
	</pre>


<dfn export>rec2100-hlg</dfn> {#valdef-color-rec2100-hlg}
---------------------------

	The ''rec2100-hlg'' [[Rec_BT.2100]] colorspace accepts three numeric parameters,
	representing the red, green, and blue channels of the color,
	with each having a valid range of [0, 1]
	regardless of the actual bit depth (10 or 12 bits per component).

	The Hybrid Log-Gamma (HLG) electro-optical transfer function
	is used [[ARIB_STD-B67]],[[!Rec_BT.2100]].
	HLG can be used with displays of different brightness
	in a wide range of viewing environments,
	with user control of the overall brightness level.
	A value of 0.75 represents "diffuse" or "media" white
	while an "18% reflectance grey" card
	has a value of 0.38. [[!Rec_BT.2390]].

	It has the following characteristics:
	(The display primaries are the same as [[!Rec.2020]]):

	<table>
		<thead><td></td><td>x</td><td>y</td></thead>
		<tr><th>Red chromaticity</th><td>0.708</td><td>0.292</td></tr>
		<tr><th>Green chromaticity</th><td>0.170</td><td>0.797</td></tr>
		<tr><th>Blue chromaticity</th><td>0.131</td><td>0.046</td></tr>
		<tr><th>White chromaticity</th><td>0.3127</td><td>0.3290</td></tr>
		<tr><th>Transfer function</th><td colspan="2">Hybrid log Gamma</td></tr>
		<tr><th>White luminance</th></tr><td colspan="2">depends on viewing conditions</td></tr>
		<tr><th>Peak white luminance</th><td colspan="2">12 times reference white</td></tr>
		<tr><th>Black luminance</th><td colspan="2">depends on reference white, see text</td></tr>
		<tr><th>Image state</th><td colspan="2">scene-referred</td></tr>
	</table>

	Issue: add other examples

	<div class="example">
		This color represents a comfortable "diffuse white"
		This color can be displayed for long periods,
		or used for subtitles,
		on any sized area of the screen.
		Content is typically mastered with a peak white
		of 1,000 to 4,000  cd/m²,
		so diffuse white will be 203 to 581 cd/m².
		<pre>
		<span class="swatch" style="--color: white"></span> color(rec2100-hlg 0.75 0.75 0.75);
		</pre>
		This color represents a mid grey,
		at 26 to 104  cd/m².
		<pre>
		<span class="swatch" style="--color: rgb(46.632% 46.632% 46.632%)"></span> color(rec2100-hlg 0.38 0.38 0.38);
		</pre>
	</div>

	Linear-light RGB signals are converted to HLG encoded as follows [[Rec_BT.2390]]:

	<!-- From BT.2390 p.26
		confirmed with Froehlich p.43
	-->

	<pre class="lang-javascript">
		var E;			// the red, green or blue component, [0, 1]
		const a = 0.17883277;
		const b = 0.28466892;   // 1 - (4 * a)
		const c = 0.55991073;   // 0.5 - a * Math.log(4 *a)
		if (E <= 1/12) {
			Edash = Math.sqrt( 3 * E);
		}
		else {
			Edash = a * Math.log(12 * E - b) + c;
		}
	</pre>
		Edash is the "gamma-corrected" (OETF-adjusted) signal.

	The reverse conversion (HLG encoded to linear light) is as follows  [[Rec_BT.2390]]::

	<!-- From BT.2390 p.33
	-->

	<pre class="lang-javascript">
		var Edash;			// the red, green or blue encoded component, [0, 1]
		const a = 0.17883277;
		const b = 0.28466892;   // 1 - (4 * a)
		const c = 0.55991073;   // 0.5 - a * Math.log(4 *a)
		if (Edash <= 0.5) {
			E = (Edash ** 2) / 3;
		}
		else {
			E = Math.exp(((Edash - c) / a) + b) / 12;
		}
	</pre>

	Issue: add black level lift Β as defined on same page?

<dfn export>Jzazbz</dfn> {#Jzazbz}
-----------------

	The ''Jzazbz'' colorspace [[!Safdar-PUCS]] accepts three numeric parameters,
	with J<sub>z</sub> representing the Lightness (similar to L in Lab)
	while a<sub>z</sub> and b<sub>z</sub> represent the
	redness-greenness and yellowness-blueness
	opponent-color axes (similar to a and b in Lab).

	Lab uses a lightness scale with a [0%, 100%] range,
	relative to media white,
	and has been experimentally extended to L=400%.
	In contrast, the J<sub>z</sub> axis in ''Jzazbz''
	uses Perceptual Quantizer encoding,
	and can represent a dynamic range of more than 13 stops.

	It has the following characteristics:

	<table>
		<thead><td></td><td>x</td><td>y</td></thead>
		<tr><th>White chromaticity</th><td>0.3127</td><td>0.3290</td></tr>
		<tr><th>Transfer function</th><td colspan="2">Perceptual Quantizer</td></tr>
		<tr><th>Peak white luminance</th><td colspan="2">10,000 cd/m²</td></tr>
		<tr><th>Black luminance</th><td colspan="2">0.001 cd/m²</td></tr>
		<tr><th>Image state</th><td colspan="2">display-referred</td></tr>
	</table>

	Note that unlike Lab, a D65 whitepoint is used.
	Thus, for most RGB spaces
	(which also use a D65 whitepoint)
	no chromatic adaptation step need be performed.

<dfn export>JzCzHz</dfn> {#JzCzHz}
-----------------

	Similar to LCH, which is the polar representation of Lab,
	''JzCzHz'' is the polar form of ''Jzazbz''.
	J<sub>z</sub> is identical to  the value in ''JzCzHz'' and represents the Lightness,
	while C<sub>z</sub> represents the Chroma or colorfulness
	and H<sub>z</sub> represents a hue angle,
	measured from the positive a<sub>z</sub> axis,
	towards the positive b<sub>z</sub> axis.

	<div class="example">
		This color represents the sRGB color "lime" in ''Jzazbz''
		<pre>
		<span class="swatch" style="--color: lime"></span> color(jzazbz 0.17542 -0.1179 0.1092);
		</pre>
		and here is the same color in the polar form
		<pre>
		<span class="swatch" style="--color: lime"></span> color(jzczhz 0.17542 0.1614 132.50);
		</pre>
	</div>

<h4 id='Jzazbz-to-JzCzHz'>
	Converting ''Jzazbz'' colors to ''JzCzHz'' colors</h4>

		Conversion to ''JzCzHz'' is trivial:

		<ol>
			<li>Hz = atan2(bz, az) // but convert to degrees!
			<li>Cz = sqrt(az^2 + bz^2)
			<li>Jz is the same
		</ol>

<h4 id='JzCzHz-to-Jzazbz'>
Converting JzCzHz colors to Jzazbz  colors</h4>

		Conversion to ''Jzazbz'' is trivial:

		<ol>
			<li>az = Cz cos(H) 	// convert to radians first!
			<li>bz = Cz sin(H)	// convert to radians first!
			<li>Jz is the same
		</ol>

<dfn export>ICtCp</dfn> {#ICtCp}
-----------------

	The ''ICtCp'' colorspace
	is defined as Constant Intensity IC<sub>T</sub>C<sub>P</sub> signal format
	in [[!Rec_BT.2100]] and accepts three numeric parameters,
	with I representing the Intensity
	(similar to L in Lab, but covering a luminance range
	up to 10,000 cd/m<sup>2</sup>)
	while C<sub>T</sub> and C<sub>P</sub> represent the
	yellowness-blueness (tritanope) and
	redness-greenness (protanope)
	opponent-color axes (similar to b and a, respectively, in Lab).

	It is based on human visual system LMS cone primaries;
	the Hunt-Pointer-Estevez (HPE) XYZ to LMS transform
	is used,
	normalized to a D65 white point.
	A crosstalk matrix is then applied,
	to reduce the gamut hull concavities of BT.2020 RGB,
	thus reducing interpolation errors.
	The crosstalk also provides improved lines of constant hue
	and improved uniformity of Just Noticeable Difference (JND) MacAdam ellipses.

	It has the following characteristics:

	<table>
		<thead><td></td><td>x</td><td>y</td></thead>
		<tr><th>White chromaticity</th><td>0.3127</td><td>0.3290</td></tr>
		<tr><th>Transfer function</th><td colspan="2">Perceptual Quantizer</td></tr>
		<tr><th>White luminance</th><td colspan="2">203 cd/m²</td></tr>
		<tr><th>Peak white luminance</th><td colspan="2">10,000 cd/m²</td></tr>
		<tr><th>Black luminance</th><td colspan="2">0.001 cd/m²</td></tr>
		<tr><th>Image state</th><td colspan="2">display-referred</td></tr>
	</table>

	Although [[Rec_BT.2100]] defines IC<sub>T</sub>C<sub>P</sub>
	by a conversion from linear-light BT.2100 RGB [[Rec_BT.2100]],
	this conversion proceeds via LMS
	and thus, any other color space can also be represented
	by applying an XYZ to LMS transform.

	Note that unlike Lab, a D65 whitepoint is used.

	Also unlike Lab, which has primarily been tested with
	lower-intensity reflective colors,
	IC<sub>T</sub>C<sub>P</sub> has been tested with
	high-chroma,
	self-luminous, and
	high intensity (HDR) colors.
	This makes it suitable for color difference measurement (deltaE ITP)
	and for gamut mapping of SDR and HDR colors.

	<div class="example">
		This color represents the sRGB color "lime" in ''ICtCp''
		<pre>
		<span class="swatch" style="--color: lime"></span> color(ictcp 0.5393 -0.2643 -0.0625);
		</pre>
	</div>

Compositing SDR and HDR content {#Compositing-SDR-HDR}
===============================

Compositing should take place in CIE XYZ,
as it is a linear-light space without gamut limitations.
Implementations may chose to composite in a linear-light RGB space instead,
which will give the same result
provided out-of-gamut values (negative, or greater than 100%)
are correctly handled
and not clipped or gamut mapped until
the final transfer to the device colorspace.

Relative HDR, using the HLG transfer function,
must map SDR media white
to the same luminance as is used
to display the 75% HLG value. [[!SMPTE-ST-2084]]

For further details, see also tables 3 and 4 in ITU Rpt_BT.2408-0 [[!Rpt_BT.2408]]

Absolute HDR, using the PQ transfer function,
should map SDR media white
to 203 cd/m², the same luminance as is used
to display the 58% PQ value. [[!SMPTE-ST-2084]]
However, implementations may chose to incorporate
a color re-rendering step (OOTF)
to account for non-reference viewing conditions.


<!-- Sample section {#sample-topic}
==============================

	Look at the mark-up in this section for examples.
	See the <a href="https://github.com/tabatkins/bikeshed/blob/master/README.md">documentation</a> for more precise instructions.
	The companion of this template shows the <a href="Overview.html">processed result</a>.

	To refer to HTML, use [[HTML]] (note the double square brackets in the source).
	To make a normative reference,
	insert a “!”, like this:
	[[!CSS-SYNTAX-3]]
	The currently available <a href="https://www.w3.org/Style/Group/css3-src/biblio.ref">list of bibliographic data</a> can of course be extended.

	We write about a property such as 'foo' like this
	and about a piece of CSS code like this: ''foo: bar''.
	(Note that if it looks like a "property: value",
	it'll automatically link to the property.)
	Inline HTML and XML are similar,
	but use the CODE element: <code class=lang-html>&lt;blockquote&gt;...&lt;/blockquote&gt;</code>
	and <code class=lang-xml>&lt;r:xyz&gt;...&lt;/r:xyz&gt;</code>.

	Note: Note that the property will automatically be linked to its definition.

	To define <dfn export>terms</dfn> into the <dfn export id="dfn-index">index</dfn>,
	there are many <dfn export lt="variant">variants</dfn>,
	but hopefully the <dfn export title="simple|simpler|simplest">simplest</dfn>
	will be the most common.
	Note that you need to explicitly export any plain <{dfn}>s you want to be linkable from other specs,
	but all other types of definition automatically export themselves.

	Note: Note that you can add non-normative notes like this.

	Of course, multi-paragraph notes are also possible: just enclose them in a <{div}>:

	<div class=note>
		Note that this note is a multi-paragraph note.

		It doesn't <em>need</em> to have two paragraphs, but it could.
	</div>

	<details class=note>
		<summary>A longer note</summary>

		When you want to insert a longer note
		to provide some useful explanation,
		but the note itself is not critical to the section it's placed in,
		use a <{details}> note instead.

		This will hide the note by default,
		so it's less distracting to the flow of the section.
		(At least, in browsers that support <{details}>;
		legacy browsers will get something like a normal note.)
	</details>

	Displayed examples come in eight different types:
	CSS examples that need no separate paragraph of explanation are put in a simple PRE:

	<pre class="example lang-css">
		EM { font-style: italic }
	</pre>

	CSS examples that need extra text need a DIV.

	<div class=example>
		The following example is the same as the previous one,
		but now it is explained:

		<pre class="lang-css">EM { font-style: italic }</pre>
	</div>

	Illegal CSS examples (examples of errors) are the same,
	but with class "illegal example".
	Examples of HTML and XML code have class "html" and "xml" respectively,
	but are otherwise ditto.

	A formal definition of a property looks like this:

Internal display model: the 'foo' property {#the-foo-property}
--------------------------------------------------------------

	<pre class='propdef'>
		Name: foo
		Value: inline-inside | block-inside | table | ruby | icon
		Initial: text
		Applies to: all elements
		Inherited: no
		Percentages: n/a
		Computed value: specified value
		Animatable: no
		Canonical order: per grammar
	</pre>

	<dl dfn-type="value" dfn-for="foo">
		<dt><dfn>value-name</dfn>
		<dd>
			Define values using a <{dl}>.
			Note that the <{dl}> wrapper
			specifies the default <{dfn}> type and what property it's for,
			so you don't have to repeat that information in each individual definition.
	</dl>

	<dfn>Cross-references</dfn> are created by enclosing a term or phrase in &lt;dfn>
	(like the word <a>cross-references</a> earlier in this sentence).
	Then an &lt;a> without an <code>href=""</code> attribute
	with the same text content will automatically be linked.
	Both &lt;dfn>s and &lt;a>s are typed,
	which allows the same text to appear as different types of terms without a collision.
	The type can often be inferred,
	but sometimes it needs to be specified,
	like when you're linking to a {{Foo}} WebIDL interface.
	(Here, we're using the <em>IDL</em> linking shorthand
	to make it clear that this is one of the IDL types.)

	And a figure with a caption is done like this:

	<figure>
		<img src="corner.png" alt="A table with a caption above it; both have margins and the margins between them are collapsed, as is normal for vertical margins.">

		<figcaption>
			Just a random image.
			Use SVG if you can.
			Otherwise, W3C prefers PNG over GIF (obviously, since PNG is a W3C Rec).
		</figcaption>
	</figure>

	Don't forget to write the alt.

	Issue: An open issue or editorial remark is OK in a WD,
	but they should be resolved/removed before the document goes to &ldquo;CR&rdquo;
	(Candidate Recommendation).
	Use <code class=lang-html>class="issue"</code> on an element,
	or begin a paragraph with &ldquo;Issue:&rdquo;.

	Issue:
	Inline issues will be copied into an <a href="#issues-index">Issues Index</a> at the end of the document,
	for easy reference.

	<pre class='idl'>
		/* Write WebIDL in a &lt;pre class="idl"> as plain text. */
		interface Foo {
			readonly attribute CSSOMString bar;
			boolean baz(FooDict Arg1, (CSSOMString or Foo) Arg2);
		};

		dictionary FooDict {
			sequence&lt;Foo> foos;
			boolean bar;
			CSSOMString baz = "qux";
		};
	</pre>

Shorthands and Descriptors {#shorthands}
----------------------------------------

Shorthand properties have a smaller set of values to provide:

<pre class="propdef shorthand">
Name: shorthand-foo
Value: foo | bar | baz
</pre>

Adding new values to an existing property? Use a partial:

<pre class="propdef partial">
Name: foo
New values: another-icon
</pre>

Or when defining a descriptor, use a descdef block (partials work here, too):

<pre class=descdef>
Name: descriptor-foo
Value: more | values
Initial: values
For: @some-at-rule
</pre>

(A required descriptor can use `Initial: n/a</code>.) -->

Issue: Do the PQ-based colorspaces require tone-mapping (OOTF) for display in different viewing environments?

<h2 class=no-num id=priv-sec>Privacy and Security Considerations</h2>

Issue: Make some considerations about privacy and security.

<h2 class="no-num" id="a11y">Accessibility Considerations</h2>

Some individuals may have a sensitivity to very bright colors, so user agents should provide a mechanism to limit the maximum luminance at user option. The toe and knee procedure in section 5.4.1 <em>Mapping to display with limited brightness range</em> of [[Rec_BT.2390]] is suggested as suitable.
